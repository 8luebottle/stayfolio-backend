# Generated by Django 2.2.4 on 2019-09-19 14:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenities', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'amenity',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('features', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'feature',
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('styles', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'style',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targets', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'target',
            },
        ),
        migrations.CreateModel(
            name='Tourspot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tourspots', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'tourspot',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('full_address', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=10)),
                ('street', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=10)),
                ('province', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=20)),
                ('longitude', models.CharField(max_length=100)),
                ('latitude', models.CharField(max_length=100)),
                ('website', models.URLField(max_length=2500, null=True)),
                ('facebook', models.URLField(max_length=2500, null=True)),
                ('instagram', models.URLField(max_length=2500, null=True)),
                ('phone', models.CharField(max_length=100, null=True)),
                ('price_min', models.CharField(max_length=100)),
                ('price_max', models.CharField(max_length=100)),
                ('persons_min', models.CharField(max_length=4)),
                ('persons_max', models.CharField(max_length=4)),
                ('is_vacancy', models.BooleanField(default=True, null=True)),
                ('room_capacity', models.CharField(max_length=3)),
                ('check_in', models.CharField(max_length=10)),
                ('check_out', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, to='place.Amenity')),
                ('features', models.ManyToManyField(blank=True, to='place.Feature')),
                ('styles', models.ManyToManyField(blank=True, to='place.Style')),
                ('targets', models.ManyToManyField(blank=True, to='place.Target')),
                ('tourspots', models.ManyToManyField(blank=True, to='place.Tourspot')),
            ],
            options={
                'db_table': 'place',
            },
        ),
    ]
